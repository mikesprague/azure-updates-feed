name: Build Azure Updates Feed

on:
  # run daily
  schedule:
    - cron: "0 12 * * *"
  # allow manual runs from GH
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DISPLAY_NAME: "Azure Updates Feed"
  JSON_OUTPUT_FILE_DIR: "docs/json/"
  JSON_FILE_TO_ATTACH: "index.json"
  OUTPUT_FILE_DIR: "docs/"
  RSS_OUTPUT_FILE_DIR: "docs/rss/"
  RSS_FILE_TO_ATTACH: "feed.rss"

jobs:
  build-azure-updates-feed:
    runs-on: ubuntu-latest
    steps:
      - name: üë∑  Checkout Repo
        uses: actions/checkout@v5

      - name: üèóÔ∏è  Setup Node.js ${{ vars.NODE_VERSION }} environment
        uses: actions/setup-node@v6
        with:
          node-version: ${{ vars.NODE_VERSION }}
          check-latest: true
          cache: npm
          cache-dependency-path: "**/package-lock.json"

      - name: ‚ö°  Cache node_modules
        uses: actions/cache@v4
        id: cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ vars.NODE_VERSION }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ vars.NODE_VERSION }}-

      - name: ‚¨ÜÔ∏è  Update npm and install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm i --location=global npm && npm install

      - name: üåê  Setup Playwright for Chromium
        run: npx playwright install chromium --with-deps

      - name: üõ†Ô∏è  Run script to create RSS feed
        run: npm start

      - name: üõ†Ô∏è  Run script to update docs
        run: npm run typedoc-html

      - name: üóÑÔ∏è  Add updated output file to repo and push changes
        if: ${{ env.HAS_UPDATES }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git status
          git add ${{ env.OUTPUT_FILE_DIR }}
          git commit -s -m "chore: update output files"
          git push origin main

      - name: üìé  Attach RSS feed file to workflow run
        if: ${{ env.HAS_UPDATES }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.RSS_FILE_TO_ATTACH }}
          path: ${{ env.RSS_OUTPUT_FILE_DIR }}${{ env.RSS_FILE_TO_ATTACH }}
          retention-days: 30

      - name: üìé  Attach JSON feed file to workflow run
        if: ${{ env.HAS_UPDATES }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.JSON_FILE_TO_ATTACH }}
          path: ${{ env.JSON_OUTPUT_FILE_DIR }}${{ env.JSON_FILE_TO_ATTACH }}
          retention-days: 30

      - name: ‚õî  Failure Notification
        if: ${{ failure() }}
        uses: mikesprague/teams-incoming-webhook-action@v1
        with:
          github-token: ${{ github.token }}
          webhook-url: ${{ secrets.TEAMS_NOTIFICATION_WEBHOOK_URL }}
          title: Workflow Failure - ${{ env.DISPLAY_NAME }}
          message: |
            **The last ${{ env.DISPLAY_NAME }} workflow run failed**
            Run logs: [${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}](${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}})
          color: failure
